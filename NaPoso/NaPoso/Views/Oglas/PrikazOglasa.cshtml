@model IEnumerable<NaPoso.Models.VerifikovanView>
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Oglasi za radnike";
    var searchValue = (string)ViewContext.HttpContext.Request.Query["search"];
}
@{
    var prijavljeni = ViewBag.PrijavljeniOglasiId as List<int>;
}
<h2>Aktivni oglasi</h2>

<div style="max-width: 500px; margin-bottom: 15px;">
    <form method="get" asp-action="PrikazOglasa">
        <div class="input-group">
            <input type="text" name="search" class="form-control" placeholder="Pretraga po naslovu/opisu" value="@searchValue" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary">Pretraži</button>
            </div>
        </div>
    </form>
</div>

<button id="toggleFiltersBtn" class="btn btn-secondary mb-3">Filteri</button>

<form id="filterForm" method="get" asp-action="PrikazOglasa" class="mb-4" style="display:none;">
    <div class="form-row">
        <input type="text" name="lokacija" class="form-control mb-2 mr-sm-2" placeholder="Lokacija"
               value="@HttpContextAccessor.HttpContext.Request.Query["lokacija"]"
               id="lokacijaInput" />

        <input type="text" id="minCijenaInput" name="minCijena" class="form-control mb-2 mr-sm-2" placeholder="Min cijena" value="@HttpContextAccessor.HttpContext.Request.Query["minCijena"]" />
        <span class="text-danger">@ViewData.ModelState["minCijena"]?.Errors.FirstOrDefault()?.ErrorMessage</span>

        <input type="text" id="maxCijenaInput" name="maxCijena" class="form-control mb-2 mr-sm-2" placeholder="Max cijena" value="@HttpContextAccessor.HttpContext.Request.Query["maxCijena"]" />
        <span class="text-danger">@ViewData.ModelState["maxCijena"]?.Errors.FirstOrDefault()?.ErrorMessage</span>

        <select name="sort" class="form-control mb-2 mr-sm-2">
            <option value="">Sortiraj po</option>
            <option value="cijena_asc">Cijena - Rastuće</option>
            <option value="cijena_desc">Cijena - Opadajuće</option>
        </select>
        <button type="submit" class="btn btn-primary mb-2">Filtriraj</button>
    </div>
</form>
<script>
    const minInput = document.getElementById("minCijenaInput");
    const maxInput = document.getElementById("maxCijenaInput");

    function sanitizeInput(e) {
        const input = e.target;
        let cursorPos = input.selectionStart;
        const oldValue = input.value;

        // Dozvoli samo cifre (0-9)
        let newValue = oldValue.replace(/[^0-9]/g, '');

        // Ako prvi znak je 0 i ima još znakova, izbriši prvi znak
        if (newValue.length > 1 && newValue.startsWith('0')) {
            newValue = newValue.slice(1);
            if (cursorPos > 0) cursorPos--;
        }

        if (newValue !== oldValue) {
            input.value = newValue;
            if (cursorPos < 0) cursorPos = 0;
            input.setSelectionRange(cursorPos, cursorPos);
        }
    }

    minInput.addEventListener("input", sanitizeInput);
    maxInput.addEventListener("input", sanitizeInput);
</script>

<script>
    const lokacijaInput = document.getElementById("lokacijaInput");
    lokacijaInput.addEventListener("input", function () {
        this.value = this.value.replace(/[^A-Za-zšđčćžŠĐČĆŽ\s]/g, '');
    });
</script>
<script>
    document.getElementById("toggleFiltersBtn").addEventListener("click", function () {
        const form = document.getElementById("filterForm");
        form.style.display = (form.style.display === "none") ? "block" : "none";
    });
</script>

<table class="table">
    <thead>
        <tr>
            <th>Naslov</th>
            <th>Opis</th>
            <th>Lokacija</th>
            <th>Cijena</th>
            <th>Verifikovan klijent</th>
            <th>Akcija</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var oglas in Model)
        {
            <tr>
                <td>@oglas.Oglas.Naslov</td>
                <td>@oglas.Oglas.Opis</td>
                <td>@oglas.Oglas.Lokacija</td>
                <td>@oglas.Oglas.CijenaPosla KM</td>
                <td>@(oglas.Verifikovan ? "Da" : "Ne")</td>
                <td>
                    @if (prijavljeni != null && prijavljeni.Contains(oglas.Oglas.Id))
                    {
                        <span class="text-success">Već prijavljen</span>
                    }
                    else
                    {
                        <a asp-controller="Oglas" asp-action="PrijaviRadnikaNaOglas" asp-route-oglasId="@oglas.Oglas.Id" class="btn btn-success">
                            Prijavi se
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>